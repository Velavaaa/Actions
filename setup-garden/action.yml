---
name: Platform CI/CD Garden setup
description: Install Garden
inputs:
  aws-cluster-arn:
    required: true
    type: string
  aws-iam-oidc-role-arn:
    required: true
    type: string
  aws-region:
    required: true
    type: string
  github-token:
    required: true
    type: string
  namespace-key:
    required: false
    type: string
    description: An optional key to append to the namespace name
outputs:
  namespace:
    description: The cluster namespace
    value: ${{ steps.namespace.outputs.namespace }}
runs:
  using: composite
  steps:
    - name: Set up Git
      uses: uniphore/platform-github-actions/.github/actions/setup-git@main
      with:
        github-token: ${{ inputs.github-token }}
    - name: Set up cluster
      uses: uniphore/platform-github-actions/.github/actions/setup-cluster@main
      with:
        aws-cluster-arn: ${{ inputs.aws-cluster-arn }}
        aws-iam-oidc-role-arn: ${{ inputs.aws-iam-oidc-role-arn }}
        aws-region: ${{ inputs.aws-region }}
    - name: Set Global Configuration
      shell: bash
      run: |
        echo "GARDEN_DISABLE_VERSION_CHECK=true" >> "${GITHUB_ENV}"
        echo "GARDEN_DISABLE_ANALYTICS=true" >> "${GITHUB_ENV}"
        echo "GARDEN_DISABLE_WEB_APP_WARN=true" >> "${GITHUB_ENV}"
    - name: Install Garden
      uses: garden-io/garden-action@v2.0
      with:
        garden-version: 0.13.39
    - name: Set up CI/CD environments in kubernetes provider
      shell: bash
      env:
        K8S_CONTEXT: ${{ inputs.aws-cluster-arn }}
      run: |
        shopt -s extglob

        yq -i '.providers += [
          {
            "name": "kubernetes",
            "environments": ["ci", "build"],
            "context": env(K8S_CONTEXT),
            "namespace": {"name": "${environment.namespace}"},
            "defaultHostname": "us.cloud.uniphoredev.com",
            "buildMode": "cluster-buildkit",
            "imagePullSecrets": [
              {"name": "uniphore-secret"},
              {"name": "dockerhub-secret"}
            ],
            "deploymentRegistry": {
              "hostname": "registry.uniphore.com",
              "namespace": "uniphore"
            }
          }
        ]' project.garden.y?(a)ml

        cat project.garden.y?(a)ml
        echo 'CI/CD environments have been injected into Project Garden'
    - name: Generate K8s compliant namespace
      id: namespace
      shell: bash
      env:
        REPO_NAME: ${{ github.event.repository.name }}
        KEY: ${{ inputs.namespace-key }}
      run: |
        namespace="${GITHUB_RUN_ID}${KEY:+"-${KEY}"}-${GITHUB_JOB}--${REPO_NAME}"

        # Make it K8s compliant
        namespace="$(
          echo "${namespace}" \
          | tr '[:upper:]' '[:lower:]' \
          | tr -cd '[:alnum:].-' \
          | sed 's/^-//' \
          | cut -c1-63 \
          | sed 's/[.-]*$//'
        )"

        echo "Garden namespace: ${namespace}"
        echo "namespace=${namespace}" >> "${GITHUB_OUTPUT}"
