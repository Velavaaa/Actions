---
name: Platform CI/CD Sign Container Images
description: Sign container images for Platform CI/CD pipelines
inputs:
  images-map:
    required: true
    type: string
    description: A map of the built images
  registry:
    required: true
    type: string
    description: The registry where signed images live and where we'll push the signature(s)
  registry-username:
    required: true
    type: string
    description: The username for the registry
  registry-password:
    required: true
    type: string
    description: The password for the registry
runs:
  using: composite
  steps:
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.3.0
      with:
        cosign-release: v2.2.2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Uniphore Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}
    - name: Sign container image(s)
      shell: bash
      env:
        IMAGES: ${{ inputs.images-map }}
        GITHUB_REPO: ${{ github.repository }}
        GITHUB_WORKFLOW: ${{ github.workflow }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        while read -r image_name; do
          build_image_id="$(
            jq --arg image "$image_name" --raw-output '.[$image]' <<< "${IMAGES}"
          )"

          if [[ -n "${build_image_id}" ]]; then
            image_repository="$(cut -d':' -f1 <<< "${build_image_id}")"
            image_digest="$(docker buildx imagetools inspect "${build_image_id}" --format "{{json .Manifest}}" | jq -r '.digest')"
            cosign sign --yes \
              -a "repo=${GITHUB_REPO}" \
              -a "workflow=${GITHUB_WORKFLOW}" \
              -a "ref=${GITHUB_SHA}" \
              "${image_repository}@${image_digest}"
          fi
        done < <(jq --raw-output 'keys | .[]' <<< "${IMAGES}")
